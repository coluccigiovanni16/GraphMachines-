
+++++++++++++++++++++++++++++++++++REPORT+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

LISTA TEST FILE  
['molecule001.ct', 'molecule002.ct', 'molecule003.ct', 'molecule004.ct', 'molecule005.ct', 'molecule006.ct', 'molecule007.ct', 'molecule008.ct', 'molecule009.ct', 'molecule011.ct', 'molecule012.ct', 'molecule013.ct', 'molecule014.ct', 'molecule016.ct', 'molecule017.ct', 'molecule018.ct', 'molecule019.ct', 'molecule020.ct', 'molecule022.ct', 'molecule023.ct', 'molecule024.ct', 'molecule025.ct', 'molecule026.ct', 'molecule027.ct', 'molecule028.ct', 'molecule029.ct', 'molecule030.ct', 'molecule031.ct', 'molecule032.ct', 'molecule033.ct', 'molecule034.ct', 'molecule035.ct', 'molecule036.ct', 'molecule037.ct', 'molecule038.ct', 'molecule039.ct', 'molecule040.ct', 'molecule041.ct', 'molecule042.ct', 'molecule043.ct', 'molecule044.ct', 'molecule045.ct', 'molecule046.ct', 'molecule047.ct', 'molecule048.ct', 'molecule050.ct', 'molecule051.ct', 'molecule052.ct', 'molecule053.ct', 'molecule054.ct', 'molecule055.ct', 'molecule056.ct', 'molecule057.ct', 'molecule058.ct', 'molecule060.ct', 'molecule061.ct', 'molecule062.ct', 'molecule063.ct', 'molecule064.ct', 'molecule065.ct', 'molecule067.ct', 'molecule068.ct', 'molecule069.ct', 'molecule070.ct', 'molecule071.ct', 'molecule072.ct', 'molecule073.ct', 'molecule074.ct', 'molecule075.ct', 'molecule076.ct', 'molecule077.ct', 'molecule078.ct', 'molecule079.ct', 'molecule080.ct', 'molecule081.ct', 'molecule082.ct', 'molecule083.ct', 'molecule084.ct', 'molecule086.ct', 'molecule087.ct', 'molecule089.ct', 'molecule091.ct', 'molecule092.ct', 'molecule093.ct', 'molecule094.ct', 'molecule095.ct', 'molecule096.ct', 'molecule097.ct', 'molecule098.ct', 'molecule099.ct', 'molecule100.ct', 'molecule102.ct', 'molecule103.ct', 'molecule105.ct', 'molecule106.ct', 'molecule107.ct', 'molecule108.ct', 'molecule109.ct', 'molecule110.ct', 'molecule111.ct', 'molecule112.ct', 'molecule113.ct', 'molecule115.ct', 'molecule116.ct', 'molecule118.ct', 'molecule119.ct', 'molecule120.ct', 'molecule121.ct', 'molecule122.ct', 'molecule123.ct', 'molecule124.ct', 'molecule125.ct', 'molecule127.ct', 'molecule128.ct', 'molecule129.ct', 'molecule130.ct', 'molecule131.ct', 'molecule132.ct', 'molecule133.ct', 'molecule134.ct', 'molecule135.ct', 'molecule136.ct', 'molecule137.ct', 'molecule138.ct', 'molecule139.ct', 'molecule140.ct', 'molecule141.ct', 'molecule142.ct', 'molecule143.ct', 'molecule144.ct', 'molecule145.ct', 'molecule147.ct', 'molecule148.ct', 'molecule149.ct', 'molecule150.ct']----------------------------------------------------------------------------------------------------------

LISTA VALIDATION FILE  
['molecule010.ct', 'molecule015.ct', 'molecule021.ct', 'molecule049.ct', 'molecule059.ct', 'molecule066.ct', 'molecule085.ct', 'molecule088.ct', 'molecule090.ct', 'molecule101.ct', 'molecule104.ct', 'molecule114.ct', 'molecule117.ct', 'molecule126.ct', 'molecule146.ct']----------------------------------------------------------------------------------------------------------

Our model: 

Net(
  (fc1): Linear(in_features=12, out_features=4, bias=False)
  (fc2): Linear(in_features=4, out_features=1, bias=False)
  (LRelu): LeakyReLU(negative_slope=0.25)
  (fc1Root): Linear(in_features=12, out_features=4, bias=False)
  (fc2Root): Linear(in_features=4, out_features=1, bias=False)
  (LReluRoot): LeakyReLU(negative_slope=0.25)
)
Printing children
------------------------------[Linear(in_features=12, out_features=4, bias=False), Linear(in_features=4, out_features=1, bias=False), LeakyReLU(negative_slope=0.25), Linear(in_features=12, out_features=4, bias=False), Linear(in_features=4, out_features=1, bias=False), LeakyReLU(negative_slope=0.25)]

Printing Modules
------------------------------[Net(
  (fc1): Linear(in_features=12, out_features=4, bias=False)
  (fc2): Linear(in_features=4, out_features=1, bias=False)
  (LRelu): LeakyReLU(negative_slope=0.25)
  (fc1Root): Linear(in_features=12, out_features=4, bias=False)
  (fc2Root): Linear(in_features=4, out_features=1, bias=False)
  (LReluRoot): LeakyReLU(negative_slope=0.25)
), Linear(in_features=12, out_features=4, bias=False), Linear(in_features=4, out_features=1, bias=False), LeakyReLU(negative_slope=0.25), Linear(in_features=12, out_features=4, bias=False), Linear(in_features=4, out_features=1, bias=False), LeakyReLU(negative_slope=0.25)]
The state dict keys: 

odict_keys(['fc1.weight', 'fc2.weight', 'fc1Root.weight', 'fc2Root.weight'])Models state_dict:fc1.weight	torch.Size([4, 12])fc2.weight	torch.Size([1, 4])fc1Root.weight	torch.Size([4, 12])fc2Root.weight	torch.Size([1, 4])OrderedDict([('fc1.weight', tensor([[-2.1398e-01,  2.8010e-01,  1.1815e-01,  9.7385e-02, -1.3312e-43,
         -3.4239e-01, -6.8523e-43, -2.1190e-41,  3.3449e-02, -4.1467e-02,
         -5.8025e-02, -4.5609e-02],
        [-9.9628e-02,  2.6580e-01,  5.3959e-02,  5.1484e-02, -9.3186e-43,
         -1.2416e-01,  1.3340e-16, -6.7683e-43,  2.3970e-02, -1.3366e-02,
         -2.9893e-02, -2.4369e-02],
        [-9.0293e-02,  4.6452e-02,  2.6190e-02,  2.1736e-02, -1.4868e-42,
         -6.8411e-02,  2.0459e-43,  7.0065e-44,  1.1430e-02, -6.3239e-03,
         -1.2717e-02, -1.0049e-02],
        [ 1.2685e+00, -6.2901e-01, -6.4605e-01, -7.3732e-01, -5.0922e-19,
          8.0919e-01,  4.6040e-41,  2.3822e-43, -3.8036e-01,  2.8280e-01,
          4.9682e-01,  3.7898e-01]])), ('fc2.weight', tensor([[ 0.6874,  0.3735,  0.1526, -1.3718]])), ('fc1Root.weight', tensor([[ 2.4827,  1.2206,  1.5842,  0.8719,  1.7815,  2.7226,  3.4007,  3.0119,
          2.4569,  1.2144,  0.7560, -0.0999],
        [-2.1540, -1.6856, -1.3365, -1.6760, -1.9822, -2.1328, -0.8678, -0.6776,
         -0.6190, -1.9410, -0.9721,  0.3913],
        [ 2.3831,  1.2951,  1.8829,  0.8474,  1.3133,  2.7020,  2.3095,  2.4367,
          2.0493,  1.0521,  0.6749,  0.0982],
        [ 4.9599,  0.7022,  0.8726,  0.7766, -0.0267,  5.6028,  3.5609,  3.5590,
          3.1332,  2.4357,  2.2871,  3.2165]])), ('fc2Root.weight', tensor([[-3.7806,  3.1332, -2.9511, -4.8643]]))])
---------------plt.close(fig)    # close the figure window-------------------------------------------------------------------------------------------

 Optimizer's state_dict:
CRITERION = MSELoss()
OPTIMIZER = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)
Tempo di training 1258.2708311080933


state	{139758507174864: {'step': 15000, 'exp_avg': tensor([[-5.7337e-02,  6.9635e-02,  1.8321e-02,  3.2040e-03, -4.9045e-44,
         -1.1732e-01, -3.1529e-43, -3.0829e-43,  3.7037e-03, -9.6529e-03,
         -3.1119e-03, -8.3822e-04],
        [-2.3482e-02,  9.0911e-02,  5.1795e-03,  1.0730e-03, -4.2740e-43,
         -3.4994e-02, -4.0054e-18, -3.0128e-43,  4.7730e-03, -9.2450e-04,
         -9.2554e-04, -2.6248e-04],
        [-3.2926e-02,  8.0770e-03,  4.0775e-03,  7.6998e-04, -6.7963e-43,
         -2.2624e-02,  9.1084e-44,  3.3631e-44,  2.7270e-03, -7.8578e-04,
         -6.1751e-04, -1.5099e-04],
        [ 2.5246e-01,  1.9013e-01, -7.4360e-03, -6.8497e-03,  1.1953e-20,
          3.8903e-02, -7.5530e-43,  1.0510e-43, -8.2472e-02,  5.3776e-02,
          4.0373e-02,  1.3585e-02]]), 'exp_avg_sq': tensor([[6.3276e-01, 3.0708e+00, 1.1382e-01, 6.1157e-03, 2.9470e-10, 6.4953e-01,
         7.7859e-11, 2.6399e-09, 1.7559e-01, 7.2314e-02, 9.4337e-03, 8.7881e-04],
        [1.8885e-01, 9.4260e-01, 3.4821e-02, 1.8620e-03, 2.1950e-10, 1.9193e-01,
         1.6986e-10, 3.6254e-09, 5.1928e-02, 2.1161e-02, 2.6897e-03, 2.5263e-04],
        [1.1232e-01, 5.2522e-01, 1.9359e-02, 1.1080e-03, 6.0551e-10, 1.0893e-01,
         8.9501e-10, 8.9701e-09, 3.0454e-02, 1.3586e-02, 1.6933e-03, 1.4497e-04],
        [1.8353e+01, 8.8424e+01, 3.3077e+00, 1.7675e-01, 1.4804e-10, 1.8303e+01,
         7.8120e-10, 2.0600e-10, 4.8885e+00, 1.9874e+00, 2.6167e-01, 2.5751e-02]])}, 139758507175008: {'step': 15000, 'exp_avg': tensor([[0.3587, 0.1906, 0.0794, 0.3429]]), 'exp_avg_sq': tensor([[  1.8543,   1.2236,   0.2490, 150.8246]])}, 139758507175152: {'step': 15000, 'exp_avg': tensor([[-2.7249e-02, -3.9186e-03, -2.1416e-02, -1.9784e-03,  7.7940e-03,
         -2.4080e-02,  1.7917e-02,  1.2773e-02,  1.6221e-02,  7.8852e-03,
          3.1959e-03, -3.0531e-03],
        [ 3.5853e-02,  1.6775e-01,  1.2264e-01,  2.2579e-02,  2.6022e-02,
          3.6132e-02, -5.9050e-03, -3.3807e-03, -4.8442e-03,  1.4872e-03,
          9.7032e-03,  1.0867e-02],
        [-1.5394e-02,  1.4600e-03, -8.1851e-03,  6.6101e-04,  5.0702e-03,
         -1.1177e-02,  9.4370e-03,  1.1122e-02,  1.4416e-02,  7.5436e-03,
          3.6289e-03, -4.0103e-05],
        [ 8.4719e-03,  7.0626e-03, -4.7557e-03, -2.0278e-03,  9.0394e-04,
          1.6964e-02,  1.2275e-02,  1.2250e-02,  2.0490e-02,  5.3599e-02,
          2.4361e-02,  2.5758e-02]]), 'exp_avg_sq': tensor([[7.9318e-03, 2.9297e-01, 3.0670e-01, 1.3326e-02, 2.1034e-03, 7.7295e-03,
         1.3762e-03, 1.1208e-03, 6.9588e-04, 8.3646e-04, 1.0334e-03, 2.7701e-04],
        [4.2194e-02, 3.3978e+00, 3.5394e+00, 1.5771e-01, 2.7023e-02, 4.2224e-02,
         2.1474e-04, 1.3613e-04, 1.6844e-04, 8.5265e-03, 6.1501e-03, 2.1162e-03],
        [3.6555e-03, 1.5686e-01, 1.6282e-01, 6.6989e-03, 9.3502e-04, 3.4972e-03,
         5.7868e-04, 6.4970e-04, 5.4158e-04, 5.5139e-04, 3.4608e-04, 1.2193e-04],
        [1.3606e-02, 6.0497e-01, 6.7622e-01, 3.2874e-02, 9.4493e-03, 1.3655e-02,
         9.0378e-04, 9.0259e-04, 8.3731e-04, 6.9635e-03, 1.7281e-03, 1.6487e-03]])}, 139758507175368: {'step': 15000, 'exp_avg': tensor([[ 0.0771, -0.2499,  0.0849,  0.0672]]), 'exp_avg_sq': tensor([[0.1882, 3.1827, 0.2241, 0.1167]])}}param_groups	[{'lr': 0.001, 'betas': (0.9, 0.999), 'eps': 1e-08, 'weight_decay': 0, 'amsgrad': False, 'params': [139758507174864, 139758507175008, 139758507175152, 139758507175368]}]
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Average Error Test Dataset= 3.402068328857422
RMSE Train Dataset = 4.449571335966257
RMSE Test Dataset = 4.399071872964326
Number of epochs 15000
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
pred =55.787410736083984
true = 58.0
differenza = 2.2125892639160156


pred =84.70317840576172
true = 79.19999694824219
differenza = 5.503181457519531


pred =93.98125457763672
true = 93.5
differenza = 0.48125457763671875


pred =126.8538818359375
true = 122.69999694824219
differenza = 4.1538848876953125


pred =135.3785400390625
true = 136.72999572753906
differenza = 1.3514556884765625


pred =136.6063995361328
true = 133.8000030517578
differenza = 2.806396484375


pred =156.03102111816406
true = 158.0
differenza = 1.9689788818359375


pred =164.31715393066406
true = 165.0
differenza = 0.6828460693359375


pred =165.57713317871094
true = 164.0
differenza = 1.5771331787109375


pred =157.0545196533203
true = 155.67999267578125
differenza = 1.3745269775390625


pred =148.91256713867188
true = 137.4600067138672
differenza = 11.452560424804688


pred =154.60183715820312
true = 161.0
differenza = 6.398162841796875


pred =159.91729736328125
true = 164.0
differenza = 4.08270263671875


pred =160.77169799804688
true = 166.0
differenza = 5.228302001953125


pred =164.24295043945312
true = 166.0
differenza = 1.757049560546875


