
+++++++++++++++++++++++++++++++++++REPORT+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

LISTA TEST FILE  
['molecule002.ct', 'molecule003.ct', 'molecule004.ct', 'molecule005.ct', 'molecule006.ct', 'molecule007.ct', 'molecule008.ct', 'molecule009.ct', 'molecule010.ct', 'molecule011.ct', 'molecule012.ct', 'molecule013.ct', 'molecule014.ct', 'molecule015.ct', 'molecule016.ct', 'molecule017.ct', 'molecule018.ct', 'molecule020.ct', 'molecule021.ct', 'molecule022.ct', 'molecule023.ct', 'molecule024.ct', 'molecule025.ct', 'molecule026.ct', 'molecule027.ct', 'molecule028.ct', 'molecule029.ct', 'molecule030.ct', 'molecule031.ct', 'molecule032.ct', 'molecule033.ct', 'molecule036.ct', 'molecule037.ct', 'molecule038.ct', 'molecule039.ct', 'molecule040.ct', 'molecule042.ct', 'molecule044.ct', 'molecule045.ct', 'molecule046.ct', 'molecule047.ct', 'molecule048.ct', 'molecule049.ct', 'molecule050.ct', 'molecule052.ct', 'molecule053.ct', 'molecule054.ct', 'molecule055.ct', 'molecule056.ct', 'molecule058.ct', 'molecule059.ct', 'molecule060.ct', 'molecule062.ct', 'molecule063.ct', 'molecule064.ct', 'molecule065.ct', 'molecule066.ct', 'molecule067.ct', 'molecule068.ct', 'molecule069.ct', 'molecule070.ct', 'molecule071.ct', 'molecule072.ct', 'molecule073.ct', 'molecule074.ct', 'molecule075.ct', 'molecule076.ct', 'molecule077.ct', 'molecule078.ct', 'molecule079.ct', 'molecule080.ct', 'molecule081.ct', 'molecule083.ct', 'molecule084.ct', 'molecule085.ct', 'molecule086.ct', 'molecule087.ct', 'molecule088.ct', 'molecule089.ct', 'molecule090.ct', 'molecule092.ct', 'molecule093.ct', 'molecule094.ct', 'molecule095.ct', 'molecule097.ct', 'molecule098.ct', 'molecule099.ct', 'molecule100.ct', 'molecule101.ct', 'molecule102.ct', 'molecule103.ct', 'molecule104.ct', 'molecule106.ct', 'molecule107.ct', 'molecule108.ct', 'molecule109.ct', 'molecule110.ct', 'molecule111.ct', 'molecule112.ct', 'molecule113.ct', 'molecule114.ct', 'molecule115.ct', 'molecule116.ct', 'molecule117.ct', 'molecule118.ct', 'molecule119.ct', 'molecule120.ct', 'molecule121.ct', 'molecule122.ct', 'molecule123.ct', 'molecule124.ct', 'molecule125.ct', 'molecule126.ct', 'molecule128.ct', 'molecule129.ct', 'molecule130.ct', 'molecule131.ct', 'molecule132.ct', 'molecule133.ct', 'molecule134.ct', 'molecule135.ct', 'molecule136.ct', 'molecule137.ct', 'molecule139.ct', 'molecule140.ct', 'molecule141.ct', 'molecule142.ct', 'molecule143.ct', 'molecule144.ct', 'molecule145.ct', 'molecule146.ct', 'molecule147.ct', 'molecule148.ct', 'molecule149.ct', 'molecule150.ct']----------------------------------------------------------------------------------------------------------

LISTA VALIDATION FILE  
['molecule001.ct', 'molecule019.ct', 'molecule034.ct', 'molecule035.ct', 'molecule041.ct', 'molecule043.ct', 'molecule051.ct', 'molecule057.ct', 'molecule061.ct', 'molecule082.ct', 'molecule091.ct', 'molecule096.ct', 'molecule105.ct', 'molecule127.ct', 'molecule138.ct']----------------------------------------------------------------------------------------------------------

Our model: 

Net(
  (fc1): Linear(in_features=12, out_features=4, bias=False)
  (fc2): Linear(in_features=4, out_features=1, bias=False)
  (LRelu): LeakyReLU(negative_slope=0.25)
  (fc1Root): Linear(in_features=12, out_features=4, bias=False)
  (fc2Root): Linear(in_features=4, out_features=1, bias=False)
  (LReluRoot): LeakyReLU(negative_slope=0.25)
)
Printing children
------------------------------[Linear(in_features=12, out_features=4, bias=False), Linear(in_features=4, out_features=1, bias=False), LeakyReLU(negative_slope=0.25), Linear(in_features=12, out_features=4, bias=False), Linear(in_features=4, out_features=1, bias=False), LeakyReLU(negative_slope=0.25)]

Printing Modules
------------------------------[Net(
  (fc1): Linear(in_features=12, out_features=4, bias=False)
  (fc2): Linear(in_features=4, out_features=1, bias=False)
  (LRelu): LeakyReLU(negative_slope=0.25)
  (fc1Root): Linear(in_features=12, out_features=4, bias=False)
  (fc2Root): Linear(in_features=4, out_features=1, bias=False)
  (LReluRoot): LeakyReLU(negative_slope=0.25)
), Linear(in_features=12, out_features=4, bias=False), Linear(in_features=4, out_features=1, bias=False), LeakyReLU(negative_slope=0.25), Linear(in_features=12, out_features=4, bias=False), Linear(in_features=4, out_features=1, bias=False), LeakyReLU(negative_slope=0.25)]
The state dict keys: 

odict_keys(['fc1.weight', 'fc2.weight', 'fc1Root.weight', 'fc2Root.weight'])Models state_dict:fc1.weight	torch.Size([4, 12])fc2.weight	torch.Size([1, 4])fc1Root.weight	torch.Size([4, 12])fc2Root.weight	torch.Size([1, 4])OrderedDict([('fc1.weight', tensor([[ 1.0280e+00,  6.5934e-03,  3.9673e-01,  4.3413e-01, -1.0790e-42,
          5.5138e-01, -1.0664e-42,  3.1109e-43, -4.8126e-01,  1.5162e-01,
          4.4264e-01,  4.6285e-01],
        [ 2.8928e-01,  6.4217e-01,  2.5338e-01,  2.8666e-01, -1.5134e-43,
          5.3006e-01, -1.3186e-42,  1.0944e-42, -4.3970e-01, -5.4712e-04,
          2.1542e-01,  2.7810e-01],
        [ 4.5712e-01,  4.7156e-01,  1.7660e-01,  2.4754e-01,  7.8364e-15,
          4.6658e-01, -3.8956e-43,  3.5453e-43, -3.2838e-01, -8.8867e-02,
          1.7789e-01,  2.3572e-01],
        [-2.7956e-02, -1.9760e-01, -1.3871e-02, -1.2065e-02,  4.1619e-43,
          1.8836e-02,  1.9954e-41, -1.7096e-43,  1.8586e-01,  9.0243e-04,
         -7.6490e-03, -1.0137e-02]])), ('fc2.weight', tensor([[ 1.2968,  0.8584,  0.7401, -0.1343]])), ('fc1Root.weight', tensor([[ 5.2868e+00, -5.5464e-01, -9.3172e-01, -4.8581e-01, -4.9124e-01,
          4.8745e+00, -2.0770e-41, -1.5234e-41,  5.1466e+00,  2.1698e+00,
          7.8485e-01,  2.6932e+00],
        [ 2.2208e+00, -6.0942e-01, -1.2105e+00, -2.5275e-02, -1.2001e+00,
          2.0221e+00, -8.6502e-42,  2.1600e-41,  5.7028e+00,  1.3863e+00,
          1.1375e+00, -1.2446e-01],
        [-2.7101e+00,  2.2877e+00,  1.6832e+00,  2.0030e+00,  1.8391e+00,
         -3.0196e+00,  2.2669e-41, -2.1581e-41, -1.2311e+00, -3.1027e+00,
         -1.5583e+00,  1.1181e+00],
        [-1.5139e+00,  1.1704e+00,  1.3592e+00,  1.2876e+00,  1.4389e+00,
         -1.6707e+00, -4.0652e-42,  1.2313e-41, -8.1242e-01, -1.8846e+00,
         -7.2078e-01,  4.2716e-01]])), ('fc2Root.weight', tensor([[-4.1198, -3.2716,  2.2294,  1.7920]]))])
---------------plt.close(fig)    # close the figure window-------------------------------------------------------------------------------------------

 Optimizer's state_dict:
CRITERION = MSELoss()
OPTIMIZER = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)
Tempo di training 1302.571933746338


state	{139646557223888: {'step': 15000, 'exp_avg': tensor([[ 6.7318e-01,  4.7499e-01,  1.4618e-01,  3.1149e-02, -4.9746e-43,
          4.5173e-01, -4.8345e-43,  1.3312e-43,  8.4029e-02,  2.0029e-01,
          1.2585e-01,  5.4062e-02],
        [ 2.6393e-01,  6.1078e-01,  9.2511e-02,  2.0310e-02, -6.3058e-44,
          3.7585e-01, -6.0956e-43,  4.9746e-43, -7.8257e-04,  8.5651e-02,
          4.7153e-02,  2.2578e-02],
        [ 3.2414e-01,  4.8852e-01,  6.0270e-02,  1.7690e-02, -5.5332e-17,
          3.2854e-01, -1.7516e-43,  1.6115e-43,  2.2909e-02,  3.2657e-02,
          3.7001e-02,  1.7573e-02],
        [-4.2090e-02, -1.0443e-01, -5.4769e-03, -1.2012e-03,  1.8918e-43,
         -2.0238e-02, -1.9632e-42, -7.7071e-44,  5.4864e-02, -2.9331e-03,
         -1.4893e-03, -5.4643e-04]]), 'exp_avg_sq': tensor([[3.9088e+01, 1.8139e+02, 6.5107e+00, 3.3213e-01, 9.8666e-11, 3.9015e+01,
         4.5101e-09, 3.0844e-10, 9.7914e+00, 4.3893e+00, 6.1931e-01, 6.9735e-02],
        [1.6531e+01, 7.6404e+01, 2.7464e+00, 1.4037e-01, 1.8405e-11, 1.6546e+01,
         6.9608e-10, 4.1693e-10, 4.1614e+00, 1.8537e+00, 2.5772e-01, 2.8343e-02],
        [1.2302e+01, 5.6764e+01, 2.0413e+00, 1.0431e-01, 1.8738e-10, 1.2303e+01,
         7.5920e-10, 4.6870e-10, 3.0903e+00, 1.3774e+00, 1.9154e-01, 2.0784e-02],
        [6.2467e-01, 5.6100e-01, 1.8943e-02, 9.4093e-04, 2.6884e-09, 6.2310e-01,
         3.3240e-09, 1.4913e-09, 4.0627e-01, 1.1633e-02, 1.6292e-03, 1.8973e-04]])}, 139646557224032: {'step': 15000, 'exp_avg': tensor([[ 0.7392,  0.6573,  0.5751, -0.0533]]), 'exp_avg_sq': tensor([[ 65.5675, 107.2815,  82.1016,   0.1825]])}, 139646557224176: {'step': 15000, 'exp_avg': tensor([[-1.4433e-02, -4.3651e-02, -1.7499e-02, -2.4975e-03, -2.4407e-03,
         -2.0207e-02, -2.8727e-43, -2.0319e-43,  4.1713e-02,  1.3651e-02,
          5.0049e-04,  6.9243e-03],
        [-9.0839e-04, -4.1664e-02, -1.3958e-02, -5.8970e-03, -7.0280e-03,
         -3.6914e-03, -1.1911e-43,  3.0128e-43,  5.5734e-02,  2.4130e-02,
          3.3565e-03, -1.6885e-03],
        [ 1.4275e-02,  4.6581e-02,  7.3414e-02,  1.3082e-02, -9.1086e-04,
          9.9419e-03,  3.1529e-43, -3.0128e-43, -1.3189e-02, -1.5600e-02,
         -1.4098e-03,  1.5523e-02],
        [ 1.4250e-02,  1.3951e-02,  4.4962e-02,  6.0031e-03, -1.2849e-03,
          1.2054e-02, -4.9045e-44,  1.6115e-43, -8.1233e-03, -1.0539e-02,
          6.3244e-03,  5.8632e-03]]), 'exp_avg_sq': tensor([[1.7845e-02, 1.0602e+00, 1.0796e+00, 7.8175e-02, 5.2024e-03, 1.8299e-02,
         4.0661e-11, 1.3130e-13, 4.2215e-03, 2.6704e-03, 2.7806e-03, 2.8925e-03],
        [1.2372e-02, 6.9503e-01, 6.2312e-01, 2.7807e-02, 2.6687e-03, 1.2337e-02,
         3.4795e-13, 7.1868e-10, 6.5759e-03, 4.0669e-03, 1.1114e-03, 2.8867e-04],
        [3.0767e-02, 3.4133e+00, 3.4705e+00, 1.0785e-01, 9.5282e-03, 3.0752e-02,
         5.4310e-11, 4.0233e-11, 5.7762e-04, 7.7565e-03, 4.1695e-03, 1.6736e-03],
        [2.1258e-02, 2.4045e+00, 2.3531e+00, 8.1701e-02, 7.4506e-03, 2.1230e-02,
         1.5556e-12, 1.4717e-11, 3.3484e-04, 5.4137e-03, 2.8824e-03, 9.1324e-04]])}, 139646557224392: {'step': 15000, 'exp_avg': tensor([[ 0.1448, -0.0249, -0.0979, -0.0356]]), 'exp_avg_sq': tensor([[ 0.1873,  0.1833, 10.4811,  4.5507]])}}param_groups	[{'lr': 0.001, 'betas': (0.9, 0.999), 'eps': 1e-08, 'weight_decay': 0, 'amsgrad': False, 'params': [139646557223888, 139646557224032, 139646557224176, 139646557224392]}]
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Average Error Test Dataset= 10.443796793619791
RMSE Train Dataset = 4.393995627080298
RMSE Test Dataset = 27.085162323058103
Number of epochs 15000
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
pred =-60.363746643066406
true = -164.0
differenza = 103.6362533569336


pred =91.91387176513672
true = 90.0
differenza = 1.9138717651367188


pred =113.32445526123047
true = 109.4000015258789
differenza = 3.9244537353515625


pred =111.51416015625
true = 109.0
differenza = 2.51416015625


pred =133.26217651367188
true = 140.27000427246094
differenza = 7.0078277587890625


pred =133.67730712890625
true = 131.6999969482422
differenza = 1.9773101806640625


pred =131.8301239013672
true = 126.5
differenza = 5.3301239013671875


pred =145.0084991455078
true = 146.1999969482422
differenza = 1.191497802734375


pred =137.42620849609375
true = 140.5
differenza = 3.07379150390625


pred =154.5605010986328
true = 155.3000030517578
differenza = 0.739501953125


pred =163.99661254882812
true = 170.0
differenza = 6.003387451171875


pred =166.75906372070312
true = 174.0
differenza = 7.240936279296875


pred =154.2962188720703
true = 148.0
differenza = 6.2962188720703125


pred =163.54852294921875
true = 166.0
differenza = 2.45147705078125


pred =160.15614318847656
true = 156.8000030517578
differenza = 3.35614013671875


