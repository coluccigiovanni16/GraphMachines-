
+++++++++++++++++++++++++++++++++++REPORT+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

LISTA TEST FILE  
['molecule001.ct', 'molecule002.ct', 'molecule003.ct', 'molecule004.ct', 'molecule005.ct', 'molecule006.ct', 'molecule007.ct', 'molecule008.ct', 'molecule009.ct', 'molecule010.ct', 'molecule011.ct', 'molecule012.ct', 'molecule013.ct', 'molecule014.ct', 'molecule015.ct', 'molecule016.ct', 'molecule017.ct', 'molecule018.ct', 'molecule019.ct', 'molecule020.ct', 'molecule021.ct', 'molecule022.ct', 'molecule023.ct', 'molecule024.ct', 'molecule025.ct', 'molecule026.ct', 'molecule027.ct', 'molecule028.ct', 'molecule029.ct', 'molecule030.ct', 'molecule031.ct', 'molecule033.ct', 'molecule034.ct', 'molecule035.ct', 'molecule036.ct', 'molecule037.ct', 'molecule038.ct', 'molecule040.ct', 'molecule041.ct', 'molecule043.ct', 'molecule045.ct', 'molecule046.ct', 'molecule047.ct', 'molecule048.ct', 'molecule049.ct', 'molecule050.ct', 'molecule051.ct', 'molecule052.ct', 'molecule053.ct', 'molecule054.ct', 'molecule055.ct', 'molecule056.ct', 'molecule057.ct', 'molecule058.ct', 'molecule059.ct', 'molecule060.ct', 'molecule061.ct', 'molecule062.ct', 'molecule063.ct', 'molecule064.ct', 'molecule065.ct', 'molecule066.ct', 'molecule067.ct', 'molecule068.ct', 'molecule069.ct', 'molecule070.ct', 'molecule071.ct', 'molecule072.ct', 'molecule073.ct', 'molecule074.ct', 'molecule075.ct', 'molecule076.ct', 'molecule077.ct', 'molecule078.ct', 'molecule079.ct', 'molecule080.ct', 'molecule081.ct', 'molecule082.ct', 'molecule083.ct', 'molecule084.ct', 'molecule085.ct', 'molecule086.ct', 'molecule087.ct', 'molecule088.ct', 'molecule090.ct', 'molecule091.ct', 'molecule092.ct', 'molecule093.ct', 'molecule094.ct', 'molecule095.ct', 'molecule096.ct', 'molecule097.ct', 'molecule098.ct', 'molecule099.ct', 'molecule100.ct', 'molecule101.ct', 'molecule104.ct', 'molecule105.ct', 'molecule106.ct', 'molecule107.ct', 'molecule108.ct', 'molecule109.ct', 'molecule111.ct', 'molecule112.ct', 'molecule114.ct', 'molecule115.ct', 'molecule116.ct', 'molecule117.ct', 'molecule118.ct', 'molecule119.ct', 'molecule120.ct', 'molecule121.ct', 'molecule122.ct', 'molecule123.ct', 'molecule124.ct', 'molecule125.ct', 'molecule126.ct', 'molecule127.ct', 'molecule128.ct', 'molecule129.ct', 'molecule132.ct', 'molecule134.ct', 'molecule135.ct', 'molecule136.ct', 'molecule138.ct', 'molecule139.ct', 'molecule140.ct', 'molecule142.ct', 'molecule144.ct', 'molecule145.ct', 'molecule146.ct', 'molecule147.ct', 'molecule148.ct', 'molecule149.ct', 'molecule150.ct']----------------------------------------------------------------------------------------------------------

LISTA VALIDATION FILE  
['molecule032.ct', 'molecule039.ct', 'molecule042.ct', 'molecule044.ct', 'molecule089.ct', 'molecule102.ct', 'molecule103.ct', 'molecule110.ct', 'molecule113.ct', 'molecule130.ct', 'molecule131.ct', 'molecule133.ct', 'molecule137.ct', 'molecule141.ct', 'molecule143.ct']----------------------------------------------------------------------------------------------------------

Our model: 

Net(
  (fc1): Linear(in_features=12, out_features=4, bias=False)
  (fc2): Linear(in_features=4, out_features=1, bias=False)
  (LRelu): LeakyReLU(negative_slope=0.25)
  (fc1Root): Linear(in_features=12, out_features=4, bias=False)
  (fc2Root): Linear(in_features=4, out_features=1, bias=False)
  (LReluRoot): LeakyReLU(negative_slope=0.25)
)
Printing children
------------------------------[Linear(in_features=12, out_features=4, bias=False), Linear(in_features=4, out_features=1, bias=False), LeakyReLU(negative_slope=0.25), Linear(in_features=12, out_features=4, bias=False), Linear(in_features=4, out_features=1, bias=False), LeakyReLU(negative_slope=0.25)]

Printing Modules
------------------------------[Net(
  (fc1): Linear(in_features=12, out_features=4, bias=False)
  (fc2): Linear(in_features=4, out_features=1, bias=False)
  (LRelu): LeakyReLU(negative_slope=0.25)
  (fc1Root): Linear(in_features=12, out_features=4, bias=False)
  (fc2Root): Linear(in_features=4, out_features=1, bias=False)
  (LReluRoot): LeakyReLU(negative_slope=0.25)
), Linear(in_features=12, out_features=4, bias=False), Linear(in_features=4, out_features=1, bias=False), LeakyReLU(negative_slope=0.25), Linear(in_features=12, out_features=4, bias=False), Linear(in_features=4, out_features=1, bias=False), LeakyReLU(negative_slope=0.25)]
The state dict keys: 

odict_keys(['fc1.weight', 'fc2.weight', 'fc1Root.weight', 'fc2Root.weight'])Models state_dict:fc1.weight	torch.Size([4, 12])fc2.weight	torch.Size([1, 4])fc1Root.weight	torch.Size([4, 12])fc2Root.weight	torch.Size([1, 4])OrderedDict([('fc1.weight', tensor([[ 1.5653e-01, -7.9045e-01, -1.0368e-01,  1.7378e-02,  6.4880e-43,
          5.5845e-01,  1.8371e-42,  4.7784e-43,  1.0372e+00, -3.3864e-01,
         -3.4762e-01, -8.6301e-02],
        [ 1.1582e+00, -2.9869e-01, -1.4819e-01,  2.1942e-01,  2.0193e-42,
          5.4314e-01, -7.7071e-44,  1.6535e-42, -6.6215e-01,  8.9823e-02,
         -7.7462e-03,  1.3305e+00],
        [ 6.8011e-01,  4.4788e-01,  4.8926e-01,  2.7446e-01, -2.4509e-42,
          8.8640e-01,  2.0613e-42, -2.3374e-42,  8.2035e-02, -2.9381e-01,
          1.2024e+00,  1.5899e+00],
        [ 2.4242e-01, -9.2886e-01, -1.1766e-01,  1.2346e-02, -1.9156e-42,
          6.6401e-01, -2.0277e-42,  1.6325e-42,  8.8808e-01, -4.2159e-01,
         -4.7444e-01, -8.1882e-02]])), ('fc2.weight', tensor([[-1.0300,  1.3460,  1.5775, -0.9924]])), ('fc1Root.weight', tensor([[ 2.1663, -1.8918, -0.6158, -1.1485, -1.5657,  2.4638,  5.2653,  5.5298,
          5.0651,  1.3781, -0.4011, -3.0453],
        [ 1.2925, -1.4994, -2.2238, -0.8700, -1.1571,  1.5891,  5.9090,  4.9670,
          4.6288,  0.9308, -0.9782, -3.7342],
        [ 1.5074, -1.6582, -1.9398, -0.8424, -0.4909,  1.5992,  4.2681,  5.5625,
          4.2399,  0.7762, -1.1836, -3.3904],
        [-1.3747,  1.2778,  1.3510,  1.1934,  1.2702, -1.5864, -1.5217, -1.7840,
         -1.5388, -4.9547,  0.2966,  5.3067]])), ('fc2Root.weight', tensor([[-4.0206, -3.8528, -3.3518,  3.2760]]))])
---------------plt.close(fig)    # close the figure window-------------------------------------------------------------------------------------------

 Optimizer's state_dict:
CRITERION = MSELoss()
OPTIMIZER = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)
Tempo di training 1308.3634099960327


state	{139696632634176: {'step': 15000, 'exp_avg': tensor([[-2.5094e-01, -2.1095e-01, -3.5464e-02, -3.6549e-03,  1.6115e-43,
         -1.4621e-01,  4.6943e-43,  1.1911e-43,  6.3119e-02, -1.7201e-01,
         -8.7775e-02, -2.7017e-02],
        [ 5.5435e-01,  2.1311e-01, -9.1256e-02, -8.1593e-03,  5.2549e-43,
          3.9409e-01, -7.0065e-45,  4.2740e-43,  9.8283e-02,  1.5710e-01,
          8.3860e-02,  1.0967e-01],
        [ 4.7029e-01, -7.8375e-02,  5.7993e-02, -4.9900e-03, -6.3759e-43,
          5.2403e-01,  5.2549e-43, -6.0816e-43,  3.3876e-01,  1.8290e-01,
          3.0853e-01,  1.3648e-01],
        [-1.4127e-01, -2.1523e-01, -6.9883e-03, -4.6830e-03, -4.9746e-43,
         -3.1412e-02, -5.2549e-43,  4.1338e-43,  3.1823e-02, -1.9062e-01,
         -4.4092e-02, -2.5705e-02]]), 'exp_avg_sq': tensor([[4.1822e+01, 5.7054e+00, 7.8539e-02, 9.3211e-03, 7.7141e-11, 4.1834e+01,
         9.7495e-10, 2.0102e-14, 2.1645e+01, 1.7312e+00, 1.2065e-01, 6.2962e-02],
        [8.8077e+01, 4.5837e+01, 6.4647e-01, 4.7401e-02, 2.6714e-09, 8.8024e+01,
         3.3819e-10, 7.9062e-10, 3.5491e+01, 4.8154e+00, 7.5992e-01, 1.7769e-01],
        [1.3106e+02, 1.4930e+02, 1.0948e+00, 4.5297e-02, 9.4136e-11, 1.3107e+02,
         2.1347e-09, 2.1612e-10, 4.7598e+01, 8.6974e+00, 1.4443e+00, 2.3786e-01],
        [3.9013e+01, 5.3218e+00, 8.7764e-02, 1.2223e-02, 1.5903e-09, 3.9036e+01,
         1.8170e-09, 8.6484e-10, 1.9963e+01, 1.6043e+00, 1.4339e-01, 5.8429e-02]])}, 139696632634320: {'step': 15000, 'exp_avg': tensor([[-0.0292,  0.4245,  0.5105,  0.0029]]), 'exp_avg_sq': tensor([[ 43.8041,  67.9061, 278.8657,  44.8285]])}, 139696632634464: {'step': 15000, 'exp_avg': tensor([[-0.0388,  0.0188,  0.0185, -0.0011, -0.0044, -0.0358,  0.0251,  0.0278,
          0.0128,  0.0182,  0.0014, -0.0344],
        [-0.0439,  0.0217,  0.0256,  0.0019, -0.0007, -0.0409,  0.0329,  0.0233,
          0.0100,  0.0133, -0.0033, -0.0412],
        [-0.0302,  0.0170,  0.0240,  0.0025,  0.0046, -0.0292,  0.0197,  0.0329,
          0.0109,  0.0112, -0.0021, -0.0373],
        [ 0.0739, -0.1208, -0.1089, -0.0019, -0.0245,  0.0717, -0.0097, -0.0124,
         -0.0078, -0.0190,  0.0347,  0.0652]]), 'exp_avg_sq': tensor([[1.5582e-02, 8.0502e-01, 8.2944e-01, 1.2157e-02, 1.0081e-02, 1.5377e-02,
         2.0236e-03, 2.1905e-03, 3.4662e-04, 4.7427e-03, 2.0245e-03, 3.7738e-03],
        [1.6823e-02, 8.7523e-01, 7.7818e-01, 1.4984e-02, 1.4891e-02, 1.6588e-02,
         2.8123e-03, 2.2047e-03, 2.9642e-04, 4.1063e-03, 2.4544e-03, 4.7285e-03],
        [1.0708e-02, 6.2189e-01, 5.7343e-01, 1.0517e-02, 1.0221e-02, 1.0660e-02,
         1.5574e-03, 2.3659e-03, 2.8553e-04, 2.9168e-03, 1.4366e-03, 3.5621e-03],
        [1.3023e-01, 8.8260e+00, 8.7659e+00, 1.3061e-01, 1.4549e-01, 1.2981e-01,
         2.9100e-04, 3.8640e-04, 1.8018e-04, 4.1479e-02, 1.7820e-02, 2.9871e-02]])}, 139696632634680: {'step': 15000, 'exp_avg': tensor([[ 0.1098,  0.1032,  0.1060, -0.1471]]), 'exp_avg_sq': tensor([[0.3798, 0.8656, 0.7855, 5.0606]])}}param_groups	[{'lr': 0.001, 'betas': (0.9, 0.999), 'eps': 1e-08, 'weight_decay': 0, 'amsgrad': False, 'params': [139696632634176, 139696632634320, 139696632634464, 139696632634680]}]
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Average Error Test Dataset= 4.69972890218099
RMSE Train Dataset = 4.260010542162536
RMSE Test Dataset = 6.199325512529789
Number of epochs 15000
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
pred =113.88311767578125
true = 115.5999984741211
differenza = 1.7168807983398438


pred =117.4312744140625
true = 118.5
differenza = 1.0687255859375


pred =128.8934783935547
true = 133.0
differenza = 4.1065216064453125


pred =132.13238525390625
true = 133.8300018310547
differenza = 1.6976165771484375


pred =163.12503051757812
true = 164.58999633789062
differenza = 1.4649658203125


pred =164.9105987548828
true = 153.0
differenza = 11.910598754882812


pred =155.81265258789062
true = 158.0
differenza = 2.187347412109375


pred =168.653564453125
true = 157.5
differenza = 11.153564453125


pred =172.90977478027344
true = 166.3000030517578
differenza = 6.609771728515625


pred =165.5565185546875
true = 162.10000610351562
differenza = 3.456512451171875


pred =165.44216918945312
true = 167.0
differenza = 1.557830810546875


pred =158.0592041015625
true = 144.8000030517578
differenza = 13.259201049804688


pred =162.30340576171875
true = 158.3000030517578
differenza = 4.0034027099609375


pred =159.79110717773438
true = 158.83999633789062
differenza = 0.95111083984375


pred =161.6481170654297
true = 167.0
differenza = 5.3518829345703125


