
+++++++++++++++++++++++++++++++++++REPORT+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

LISTA TEST FILE  
dict_keys(['dimethyl_peroxide.ct', 'dimethyl_sulfide.ct', 'dimethyl_disulfide.ct', 'ethyl_methyl_ether.ct', 'ethyl_methyl_peroxide.ct', 'dimethoxymethane.ct', 'ethyl_methyl_sulfide.ct', 'ethyl_methyl_disulfide.ct', 'bis(methylthio)methane.ct', 'diethyl_ether.ct', 'isopropyl_methyl_ether.ct', 'diethyl_peroxide.ct', 'isopropyl_methyl_peroxide.ct', '1,1-dimethoxyethane.ct', '1,2-dimethoxyethane.ct', 'methyl_propyl_sulfide.ct', 'diethyl_sulfide.ct', 'isopropyl_methyl_sulfide.ct', '1,1-bis(methylthio)ethane.ct', 'ethylthiomethylthiomethane.ct', '1,2-bis(methylthio)ethane.ct', 'butyl_methyl_ether.ct', 'ethyl_propyl_ether.ct', 'ethyl_isopropyl_ether.ct', 'isobutyl_methyl_ether.ct', 'sec-butyl_methyl_ether.ct', 'tert-butyl_methyl_ether.ct', '2,2-dimethoxypropane.ct', '1,3-dimethoxypropane.ct', '1-ethoxy-2-methoxyethane.ct', '1,2-dimethoxypropane.ct', 'ethyl_isopropyl_sulfide.ct', 'butyl_methyl_sulfide.ct', 'isobutyl_methyl_sulfide.ct', 'ethyl_propyl_sulfide.ct', 'tert-butyl_methyl_sulfide.ct', 'ethyl_isopropyl_disulfide.ct', 'bis(ethylthio)methane.ct', 'methyl_pentyl_ether.ct', 'ethyl_butyl_ether.ct', 'dipropyl_ether.ct', 'isopropyl_propyl_ether.ct', 'ethyl_isobutyl_ether.ct', 'isopentyl_methyl_ether.ct', 'methyl_2-methylbutyl_ether.ct', 'methyl_1-methylbutyl_ether.ct', 'diisopropyl_ether.ct', 'methyl_tert-pentyl_ether.ct', '1,2-dimethylpropyl_methyl_ether.ct', '1,1-diethoxyethane.ct', '1,1-dimethoxy-2-methylpropane.ct', '2-ethoxy-2-methoxypropane.ct', '1,1-dimethoxybutane.ct', '1-methoxy-1-propoxyethane.ct', '1,2-diethoxyethane.ct', '1,3-dimethoxybutane.ct', 'methyl_pentyl_sulfide.ct', 'butyl_ethyl_sulfide.ct', 'dipropyl_sulfide.ct', 'isopropyl_propyl_sulfide.ct', 'ethyl_isobutyl_sulfide.ct', 'isopentyl_methyl_sulfide.ct', 'methyl_2-methylbutyl_sulfide.ct', 'tert-butyl_ethyl_sulfide.ct', 'diisopropyl_sulfide.ct', '1-ethylpropyl_methyl_sulfide.ct', 'dipropyl_disulfide.ct', 'diisopropyl_disulfide.ct', 'sec-butyl_ethyl_disulfide.ct', 'isopropyl_propyl_disulfide.ct', 'tert-butyl_ethyl_disulfide.ct', '1,1-bis(ethylthio)ethane.ct', 'hexyl_methyl_ether.ct', 'ethyl_pentyl_ether.ct', 'butyl_propyl_ether.ct', 'butyl_isopropyl_ether.ct', 'isobutyl_propyl_ether.ct', 'ethyl_isopentyl_ether.ct', 'tert-butyl_propyl_ether.ct', '2,2-dimethylpropyl_ethyl_ether.ct', 'tert-butyl_isopropyl_ether.ct', 'ethyl_tert-pentyl_ether.ct', '1,2-dimethylpropyl_ethyl_ether.ct', 'ethyl_1-ethylpropyl_ether.ct', 'dipropoxymethane.ct', '2,2-diethoxypropane.ct', '1-ethoxy-1-propoxyethane.ct', '1,1-diethoxypropane.ct', '1,3-diethoxypropane.ct', '1,5-dimethoxypentane.ct', '1,4-dimethoxypentane.ct', '1,3-dimethoxypentane.ct', 'hexyl_methyl_sulfide.ct', 'butyl_propyl_sulfide.ct', 'isobutyl_propyl_sulfide.ct', 'isobutyl_isopropyl_sulfide.ct', 'ethyl_2-methylbutyl_sulfide.ct', 'tert-butyl_propyl_sulfide.ct', 'sec-butyl_isopropyl_sulfide.ct', 'butyl_isopropyl_sulfide.ct', '1,3-bis(ethylthio)propane.ct', 'dibutyl_ether.ct', 'isopentyl_propyl_ether.ct', 'butyl_isobutyl_ether.ct', 'butyl_sec-butyl_ether.ct', 'butyl_tert-butyl_ether.ct', 'sec-butyl_isobutyl_ether.ct', '1,3-dimethylpentyl_methyl_ether.ct', 'isobutyl_tert-butyl_ether.ct', 'di-tert-butyl_ether.ct', 'isopropyl_tert-pentyl_ether.ct', 'heptyl_methyl_ether.ct', '1-ethylpropyl_propyl_ether.ct', 'di-tert-butyl_peroxide.ct', '1,1-diisopropoxyethane.ct', '1,1-dipropoxyethane.ct', '1,1-dimethoxyhexane.ct', '1,4-diethoxybutane.ct', 'dibutylsulfide.ct', 'diisobutyl_sulfide.ct', 'butyl_isobutyl_sulfide.ct', 'di-tert-butyl_sulfide.ct', 'di-sec-butyl_sulfide.ct', 'butyl_sec-butyl_sulfide.ct', 'sec-butyl_isobutyl_sulfide.ct', 'heptyl_methyl_sulfide.ct', 'diisobutyl_disulfide.ct', 'di-tert-butyl_disulfide.ct', '1,1-bis(isopropylthio)ethane.ct', '1-ethyl-1,3-dimethylbutyl_methyl_ether.ct', 'ethyl_heptyl_ether.ct', 'butyl_isopentyl_ether.ct', 'tert-butyl_isopentyl_ether.ct', 'butyl_pentyl_ether.ct', '1,5-dimethylhexyl_methyl_ether.ct', 'methyl_1-methylheptyl_ether.ct', 'methyl_octyl_ether.ct', '2-ethylhexyl_methyl_ether.ct', 'methyl_1,1,4-trimethylpentyl_ether.ct', '3,5-dimethylhexyl_methyl_ether.ct', 'ethyl_1,1,3-trimethylbutyl_ether.ct', 'tert-butyl_tert-pentyl_peroxide.ct', '1,1-dimethoxy-2,2-dimethylpentane.ct', '1,1-diethoxypentane.ct', '1,1-diisopropoxypropane.ct', '1,3-dipropoxypropane.ct', '1,3-diisopropoxypropane.ct', 'ethyl_heptyl_sulfide.ct', 'methyl_octyl_sulfide.ct', 'bis(butylthio)methane.ct', '2,2-bis(propylthio)propane.ct', 'ethyl_octyl_ether.ct', 'ethyl_1,1,3,3-tetramethylbutyl_ether.ct', 'bis(1-methylbutyl)_ether.ct', 'diisopentyl_ether.ct', 'dipentyl_ether.ct', 'isopropyl_heptyl_ether.ct', 'heptyl_propyl_ether.ct', 'isopentyl_pentyl_ether.ct', 'methyl_1-methyloctyl_ether.ct', 'di-tert-pentyl_sulfide.ct', 'dipentyl_sulfide.ct', 'isobutyl_4-methylpentyl_sulfide.ct', 'methyl_nonyl_sulfide.ct'])


LISTA VALIDATION FILE  
dict_keys(['dimethyl_ether.ct', 'methyl_propyl_ether.ct', 'diethyl_disulfide.ct', 'diethoxymethane.ct', 'ethyl_propyl_disulfide.ct', 'ethyl_sec-butyl_ether.ct', '1,4-dimethoxybutane.ct', 'sec-butyl_ethyl_sulfide.ct', '1,2-bis(ethylthio)ethane.ct', 'ethyl_1-methylbutyl_ether.ct', '1-ethoxy-4-methoxybutane.ct', 'ethyl_isopentyl_sulfide.ct', 'diisobutyl_ether.ct', '2,4-dimethoxy-2-methylpentane.ct', 'dibutyl_disulfide.ct', 'isobutyl_isopentyl_ether.ct', '1,1-dipropoxypropane.ct', 'bis(1-ethylpropyl)_ether.ct', 'diisopentyl_sulfide.ct'])


Our model: 

RegressionGm(
  (fc1): Linear(in_features=12, out_features=4, bias=False)
  (fc2): Linear(in_features=4, out_features=1, bias=False)
  (LRelu): SELU()
  (fc1Root): Linear(in_features=12, out_features=4, bias=False)
  (fc2Root): Linear(in_features=4, out_features=1, bias=False)
  (LReluRoot): SELU()
)
Printing children
------------------------------[Linear(in_features=12, out_features=4, bias=False), Linear(in_features=4, out_features=1, bias=False), SELU(), Linear(in_features=12, out_features=4, bias=False), Linear(in_features=4, out_features=1, bias=False), SELU()]

Printing Modules
------------------------------[RegressionGm(
  (fc1): Linear(in_features=12, out_features=4, bias=False)
  (fc2): Linear(in_features=4, out_features=1, bias=False)
  (LRelu): SELU()
  (fc1Root): Linear(in_features=12, out_features=4, bias=False)
  (fc2Root): Linear(in_features=4, out_features=1, bias=False)
  (LReluRoot): SELU()
), Linear(in_features=12, out_features=4, bias=False), Linear(in_features=4, out_features=1, bias=False), SELU(), Linear(in_features=12, out_features=4, bias=False), Linear(in_features=4, out_features=1, bias=False), SELU()]
The state dict keys: 

odict_keys(['fc1.weight', 'fc2.weight', 'fc1Root.weight', 'fc2Root.weight'])Models state_dict:fc1.weight	torch.Size([4, 12])fc2.weight	torch.Size([1, 4])fc1Root.weight	torch.Size([4, 12])fc2Root.weight	torch.Size([1, 4])OrderedDict([('fc1.weight', tensor([[-4.9859e-02,  1.4692e-01,  4.1398e-02, -3.8502e-02,  7.8625e-02,
          3.2926e-03, -2.4381e-01, -1.1632e-01, -2.0766e-04,  1.0154e-01,
         -1.0932e-01,  1.6779e-01],
        [-4.8281e-02,  2.8023e-01,  4.7198e-02, -5.5465e-02, -1.4907e-01,
         -1.1604e-01, -2.5589e-01, -3.5698e-01, -9.1696e-04,  6.8611e-02,
         -3.2057e-01,  2.0160e-01],
        [ 2.0215e-01, -1.2127e-02,  1.9743e-02, -5.8672e-02,  1.0037e-02,
         -1.8410e-01, -1.4724e-01,  1.8010e-01,  1.6021e-01, -1.0354e-01,
          1.2912e-02, -3.6840e-01],
        [ 1.0479e-02, -1.1101e-01, -4.0128e-02,  1.1570e-01,  1.5674e-03,
         -2.6803e-01,  2.1811e-01, -1.5459e-01, -5.2368e-02,  1.2283e-01,
          1.5360e-01, -1.3075e-01]])), ('fc2.weight', tensor([[ 0.5658,  0.4880, -0.2258, -0.3968]])), ('fc1Root.weight', tensor([[-1.9047e-02, -1.8351e-01,  3.9464e-01,  1.2997e-01, -6.7977e-02,
         -2.2043e-01, -1.0025e-01, -3.5696e-01,  2.2783e-06, -1.9697e-01,
          1.2395e-01, -3.7107e-01],
        [-5.8751e-02, -3.3829e-01, -1.0618e-01,  3.2325e-01,  3.2962e-01,
         -3.6444e-01, -1.1606e-01,  1.3180e-01, -1.9016e-01, -1.3723e-02,
          1.7530e-01,  1.6211e-02],
        [-1.1924e-01,  2.8622e-01,  1.5103e-01, -1.2985e-01,  5.6155e-02,
         -6.2740e-02,  1.0621e-01,  1.1007e-01, -4.0462e-02, -7.9807e-02,
          7.1786e-02,  3.2572e-01],
        [-2.5723e-01,  1.5898e-01, -8.4509e-02,  3.0192e-01,  1.8903e-01,
          2.0938e-02, -1.1172e-01, -2.3821e-01,  1.5403e-01, -2.3955e-02,
         -2.5564e-01, -2.7214e-01]])), ('fc2Root.weight', tensor([[-0.2128, -0.4948,  0.0356, -0.2556]]))])
---------------plt.close(fig)    # close the figure window-------------------------------------------------------------------------------------------

 Optimizer's state_dict:
CRITERION = MSELoss()
OPTIMIZER = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)
Tempo di training 0.4962778091430664


state	{139859771580576: {'step': 100, 'exp_avg': tensor([[ 1.1435e+01, -5.6532e+00, -1.8904e-02,  3.6540e-02,  8.2554e-02,
         -9.1208e+00,  7.1227e+00,  1.3146e+01, -1.0295e-04,  3.4356e-01,
          3.0301e+01, -1.8076e+01],
        [ 2.6221e-01, -2.6233e+00,  6.7951e-02,  1.1789e-02, -1.5115e-01,
         -1.1874e+01,  4.6195e+00,  6.8829e+00, -2.3697e-03,  2.8695e-01,
          1.7781e+01, -1.6839e+01],
        [-5.8015e-01,  1.9575e+00,  7.8838e-03, -1.0065e-01,  1.3268e-02,
          5.5635e+00, -2.7992e+00, -3.6998e+00,  1.6195e-01, -2.4770e-01,
         -9.4898e+00,  8.1246e+00],
        [-7.1025e+00,  4.1680e+00, -3.5041e-02,  5.3660e-02,  3.2716e-03,
          7.0084e+00, -4.3734e+00, -9.9554e+00, -5.6662e-02, -1.2861e-01,
         -2.2034e+01,  1.4422e+01]]), 'exp_avg_sq': tensor([[9.2043e+00, 1.2367e+00, 4.7560e-04, 6.5451e-05, 1.4926e-03, 2.1811e+01,
         3.0839e+00, 9.7423e+00, 9.9334e-06, 7.0972e-03, 4.0092e+01, 2.7069e+01],
        [9.2737e+00, 2.7315e-01, 2.9457e-04, 1.1456e-05, 3.7837e-03, 2.9165e+01,
         1.1976e+00, 2.4099e+00, 7.5564e-05, 6.0692e-03, 1.2750e+01, 3.3048e+01],
        [5.4922e-01, 1.6958e-01, 5.3663e-04, 1.2944e-03, 1.9679e-04, 2.7719e+00,
         5.3942e-01, 5.4553e-01, 4.2363e-03, 4.5230e-03, 3.7812e+00, 3.8339e+00],
        [3.8785e+00, 6.2953e-01, 1.3156e-04, 2.0203e-03, 8.5827e-05, 1.1217e+01,
         9.4086e-01, 5.1683e+00, 8.8979e-04, 4.4280e-04, 1.8964e+01, 1.5897e+01]])}, 139859771583616: {'step': 100, 'exp_avg': tensor([[-20.0314, -34.5819,  22.7627,  19.5024]]), 'exp_avg_sq': tensor([[12.9737, 41.4163, 21.1911, 17.4116]])}, 139859771581616: {'step': 100, 'exp_avg': tensor([[ 5.8279e+01,  2.0674e+01, -8.9784e+00, -1.7116e+01, -9.0597e+00,
          4.8545e+01,  6.6600e+00,  2.9797e+00, -5.7247e-08,  1.1981e+01,
          4.6292e+01,  2.4184e+01],
        [ 1.4188e+02,  4.7326e+01, -3.9065e+01, -4.4104e+01, -1.2332e+01,
          1.1638e+02,  1.8271e+01,  7.1891e+00, -2.9523e-02,  1.6836e+01,
          1.2508e+02,  6.4350e+01],
        [-1.0682e+01, -3.7200e+00,  2.1303e+00,  3.1594e+00,  1.6652e+00,
         -9.2979e+00, -8.6115e-01, -4.8393e-01, -6.9088e-03, -2.2389e+00,
         -8.4277e+00, -4.2690e+00],
        [ 6.3084e+01,  2.2676e+01, -1.3862e+01, -1.5338e+01, -1.0333e+01,
          5.3187e+01,  6.5784e+00,  3.3122e+00,  2.4111e-02,  1.3934e+01,
          4.9149e+01,  2.2392e+01]]), 'exp_avg_sq': tensor([[2.2659e+02, 1.4399e+01, 4.4400e+00, 1.2418e+01, 2.8578e+00, 1.6277e+02,
         2.2008e+00, 6.8260e-01, 4.1654e-11, 8.5817e+00, 1.4705e+02, 4.4182e+01],
        [1.8525e+03, 8.3354e+01, 6.7162e+01, 1.0657e+02, 8.6102e+00, 1.3849e+03,
         1.5652e+01, 4.0439e+00, 1.3706e-04, 4.1272e+01, 1.3542e+03, 4.4133e+02],
        [2.6501e+01, 5.3670e-01, 8.8427e-01, 1.0086e+00, 1.3375e-01, 1.8575e+01,
         2.8287e-01, 9.3751e-02, 1.6250e-05, 6.4386e-01, 1.8980e+01, 6.1166e+00],
        [3.3831e+02, 1.8204e+01, 9.9306e+00, 1.2392e+01, 4.4937e+00, 2.4568e+02,
         3.2821e+00, 8.3104e-01, 9.7913e-05, 1.6399e+01, 2.0588e+02, 4.9456e+01]])}, 139859771581536: {'step': 100, 'exp_avg': tensor([[165.6793, 148.9245, -25.0010, 203.7693]]), 'exp_avg_sq': tensor([[1000.9041,  729.3209,  231.5925, 2458.7119]])}}param_groups	[{'lr': 0.001, 'betas': (0.9, 0.999), 'eps': 1e-08, 'weight_decay': 0, 'amsgrad': False, 'params': [139859771580576, 139859771583616, 139859771581616, 139859771581536]}]

Average Error Test Dataset= 137.6501874421772
RMSE Train Dataset = [140.496496842448, 140.44980058503108, 140.40209416840975, 140.34726740749176, 140.28398930829562, 140.21429609039515, 140.13802487413972, 140.05513004929523, 139.96573241333036, 139.86905148209163]
RMSE Test Dataset = [147.86637495979267, 147.82170293760996, 147.77557678368237, 147.72216452051128, 147.66016198521524, 147.59058394338712, 147.51496216485972, 147.43277731944482, 147.3445751567563, 147.24954239105466]
Number of epochs 100

pred =0.26631245017051697
true = tensor([-23.7000])
difference = tensor([23.9663])


pred =0.2896903157234192
true = tensor([40.])
difference = tensor([39.7103])


pred =0.5016813278198242
true = tensor([154.])
difference = tensor([153.4983])


pred =0.5064278244972229
true = tensor([88.])
difference = tensor([87.4936])


pred =0.5012655854225159
true = tensor([173.7000])
difference = tensor([173.1987])


pred =0.8942627906799316
true = tensor([81.2000])
difference = tensor([80.3057])


pred =0.2901667654514313
true = tensor([132.5000])
difference = tensor([132.2098])


pred =0.9223489761352539
true = tensor([133.6000])
difference = tensor([132.6777])


pred =0.5037768483161926
true = tensor([211.])
difference = tensor([210.4962])


pred =0.8927706480026245
true = tensor([106.5000])
difference = tensor([105.6072])


pred =0.2901707887649536
true = tensor([146.])
difference = tensor([145.7098])


pred =0.8410978317260742
true = tensor([159.])
difference = tensor([158.1589])


pred =0.851582407951355
true = tensor([122.2000])
difference = tensor([121.3484])


pred =0.8072144985198975
true = tensor([147.])
difference = tensor([146.1928])


pred =0.510773777961731
true = tensor([226.])
difference = tensor([225.4892])


pred =0.8551387786865234
true = tensor([139.])
difference = tensor([138.1449])


pred =0.7663941979408264
true = tensor([166.5000])
difference = tensor([165.7336])


pred =0.7455218434333801
true = tensor([162.])
difference = tensor([161.2545])


pred =0.8424542546272278
true = tensor([215.])
difference = tensor([214.1575])


